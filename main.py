import argparse
import nmap
import json
import sys
import time


def display(nm: nmap.PortScanner):
    print(nm.scanstats())
    for host in nm.all_hosts():
        print('----------------------------------------------------')
        print('Host : %s (%s)' % (host, nm[host].hostname()))
        print('State : %s' % nm[host].state())
        for proto in nm[host].all_protocols():
            print('----------')
            print('Protocol : %s' % proto)

            lport = nm[host][proto].keys()
            # lport.sort()
            for port in lport:
                print('port : %s \info : %s' % (port, nm[host][proto][port]))


def save_output(nm: nmap.PortScanner):
    data = nm.analyse_nmap_xml_scan()
    with open("report.json", "w") as outfile:
        json.dump(data, outfile, indent=4)


def get_arguments(args):
    nm_args = "-sV" if args.deep_scan else "-sP"
    if args.tcp_filter:
        nm_args += " -sS"
    if args.udp_filter:
        nm_args += " -sU"
    # Default disable ping and verbose 
    nm_args += " -Pn -v"
    return nm_args


def _scanner(hosts, ports, args, sudo):
    nm = nmap.PortScanner()
    nm.scan(hosts=hosts, ports=ports, arguments=args, sudo=sudo)
    return nm


def scanner(hosts, args, ports=None, sudo=True):
    nmap_args = get_arguments(args)
    nm = _scanner(hosts, ports, nmap_args, sudo)

    if not args.no_display:
        display(nm)
    
    if args.save_output:
        save_output(nm)


def main():
    parser = argparse.ArgumentParser(prog='Domain Scanner')
    parser.add_argument("-ip", "--ipaddress",
                        help="IP (192.168.1.1) or range of IPs (192.168.1-10.0-255) to scan, default localhost",
                        default="localhost")
    parser.add_argument("-p", "--ports", help="specify port/range of ports (22,53,110,143-4564)",
                        default=None)
    parser.add_argument("-ds", "--deep-scan", help="Enable deep-scanning",
                        action="store_true")
    parser.add_argument("-tcp", "--tcp-filter",
                        help="scan TCP services only",
                        action="store_true")
    parser.add_argument("-udp", "--udp-filter",
                        help="scan UDP services only",
                        action="store_true")
    parser.add_argument("-nd", "--no-display", help="Disable display output in terminal",
                        action="store_true")
    parser.add_argument("-so", "--save-output", help="Export scanned results to `report.json`",
                        action="store_true")
    parser.add_argument('--version',
                        action='version',
                        version='%(prog)s 1.0')


    args = parser.parse_args()
    scanner(
        hosts=args.ipaddress,
        ports=args.ports,
        args=args,
    )


if __name__ == "__main__":
    main()
